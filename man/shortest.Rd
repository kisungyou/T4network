% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_shortest.R
\name{shortest}
\alias{shortest}
\title{Compute Shortest-Path Distance}
\usage{
shortest(graph)
}
\arguments{
\item{graph}{one of the followings; (1) an \code{igraph} object, (2) a \code{network} object, or (3) an \eqn{(N\times N)} adjacency matrix.}
}
\value{
an \eqn{(N\times N)} matrix of pairwise shortest path distances.
}
\description{
\code{shortest} routine is an implementation of Floyd-Warshall algorithm to find 
the shortest path between \eqn{N} nodes for a given graph. For simplicity, this function 
only accepts a symmetric network of \eqn{\lbrace 0, 1 \rbrace } binary edges.
}
\examples{
## load the karate club data
data(karate, package="T4network")

## compute shortest-path distance
dist.spd = shortest(karate$A)

## visualize
opar <- par(no.readonly=TRUE)
par(pty="s")
image(dist.spd[,34:1], axes=FALSE, main="shortest-path distance matrix")
par(opar)

}
\concept{compute}
